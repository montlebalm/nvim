{
  "useEffect": {
    "prefix": "useEffect",
    "body": ["useEffect(() => {", "\t$1", "}, []);"]
  },
  "useEffectMemo": {
    "prefix": "useEffectMemo",
    "body": [
      "// Memoize callback to remove it as a dependency",
      "const $1Ref = useRef($1);",
      "$1Ref.current = $1;"
    ]
  },
  "useMemo": {
    "prefix": "useMemo",
    "body": [
      "useMemo(() => {",
      "\t$1",
      "}, []);"
    ]
  },
  "component": {
    "prefix": "component",
    "body": [
      "import React, { ReactNode } from 'react';",
      "",
      "interface ${1:Component}Props {",
      "\t",
      "}",
      "",
      "export const ${1:Component} = ({ foo }: ${1:Component}Props): ReactNode => {",
      "\treturn <div />;",
      "};"
    ]
  }
}
